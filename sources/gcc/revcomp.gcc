/* The Computer Language Benchmarks Game
   http://shootout.alioth.debian.org
   contributed by Arek Bochinski
*/


#define _GNU_SOURCE 1
#include <stdio.h>
#include <string.h>
#include <limits.h>

//conversion table
static const char FtoCOMP[128] = {
   0,0,0,0,0,0,0,0,0,0,0,0,0,'\n',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,'T','V','G','H',0,0,'C','D',0,0,'M',0,'K','N',0,
   0,0,'Y','S','A',0,'B','W',0,'R',0, 0, 0,0,0,0,
   0,'T','V','G','H',0,0,'C','D',0,0,'M',0,'K','N',0,
   0,0,'Y','S','A',0,'B','W',0,'R',0,0,0,0,0,0
};

int main (int argc, char * argv[]) {
    char buffer[10240];
    int itotal=0,forward=0,end=0;
    char peek;
    //print header
   printf("%s",fgets_unlocked(buffer,61,stdin));
   while(fgets_unlocked(buffer+itotal,10239,stdin))
   {
      //if header is next
      if((peek=fgetc_unlocked(stdin))=='>')
      {
         //get total
         itotal+=strlen(buffer+itotal);
         //set the reverse indexes
         forward=0;
         end=itotal-2;
         //reverse the buffer and complement it
         while(forward<end)
         {
            if(buffer[forward]=='\n')++forward;
            if(buffer[end]=='\n')--end;
            buffer[forward]^=buffer[end];
            buffer[end]^=buffer[forward];
            buffer[forward]^=buffer[end];
            buffer[end]=FtoCOMP[buffer[end]];
            buffer[forward]=FtoCOMP[buffer[forward]];
            ++forward;
            --end;
         }
         //print it out
         puts(buffer);
         //print out the next header if there
         printf("%c%s",'>',fgets_unlocked(buffer,10239,stdin));
         //reset total
         itotal=0;
      }
      else{
         //header is not next, plase character back into stdin
         ungetc(peek,stdin);
         //sum up the total lenght of characters in the buffer
         itotal+=strlen(buffer+itotal);
      }
   }
   //print last sequence at end of stdin 
   itotal+=strlen(buffer+itotal);
   //set the reverse indexes
   forward=0;
   end=itotal-2;
   //reverse the buffer and complement it
   while(forward<end)
   {
      if(buffer[forward]=='\n')++forward;
      if(buffer[end]=='\n')--end;
      buffer[forward]^=buffer[end];
      buffer[end]^=buffer[forward];
      buffer[forward]^=buffer[end];
      buffer[end]=FtoCOMP[buffer[end]];
      buffer[forward]=FtoCOMP[buffer[forward]];
      ++forward;
      --end;
   }
   puts(buffer);
   return 0;
}
