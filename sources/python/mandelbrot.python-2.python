# The Computer Language Benchmarks Game
# http://shootout.alioth.debian.org/
#
# contributed by Heinrich Acker

import sys
import numpy

limit = 2.
size = int(sys.argv[1])

# create an array of NxN complex constants
grid = numpy.arange(0, 2, 2./size)
c = (grid-1.5).reshape(1, size).repeat(size, 0) + \
     1j*(grid-1).reshape(size, 1).repeat(size, 1)

# create NxN arrays for iteration and results
z = 0*c
mask = z==0

# compute the mandelbrot set vectorized
for i in range(50):
    z = mask * (z * z + c)
    mask = numpy.logical_and(mask, numpy.abs(z)<limit)

# map the bool results to their binary value
mask = mask.reshape(-1, 8).astype('uint8')
for bit in range(8):
    mask[:, 7-bit] *= 1 << bit

# pack the results into bytes
mask = mask.sum(1, 'uint8')

# write image data
sys.stdout.write("P4\n%d %d\n%s" % (size, size, mask.tostring()))
